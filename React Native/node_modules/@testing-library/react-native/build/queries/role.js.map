{"version":3,"file":"role.js","names":["matchAccessibleNameIfNeeded","node","name","queryAllByText","queryAllByLabelText","getQueriesForElement","length","matchAccessibleStateIfNeeded","options","matchAccessibilityState","queryAllByRole","instance","queryAllByRoleFn","role","findAll","type","matchStringProp","props","accessibilityRole","buildErrorMessage","errors","String","push","accessibilityStateKeys","forEach","stateKey","undefined","join","getMultipleError","getMissingError","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","makeQueries","bindByRoleQueries","getByRole","getAllByRole","queryByRole","findByRole","findAllByRole"],"sources":["../../src/queries/role.ts"],"sourcesContent":["import { type AccessibilityState } from 'react-native';\nimport type { ReactTestInstance } from 'react-test-renderer';\nimport { accessibilityStateKeys } from '../helpers/accessiblity';\nimport { matchAccessibilityState } from '../helpers/matchers/accessibilityState';\nimport { matchStringProp } from '../helpers/matchers/matchStringProp';\nimport type { TextMatch } from '../matches';\nimport { getQueriesForElement } from '../within';\nimport { makeQueries } from './makeQueries';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './makeQueries';\n\ntype ByRoleOptions = {\n  name?: TextMatch;\n} & AccessibilityState;\n\nconst matchAccessibleNameIfNeeded = (\n  node: ReactTestInstance,\n  name?: TextMatch\n) => {\n  if (name == null) return true;\n\n  const { queryAllByText, queryAllByLabelText } = getQueriesForElement(node);\n  return (\n    queryAllByText(name).length > 0 || queryAllByLabelText(name).length > 0\n  );\n};\n\nconst matchAccessibleStateIfNeeded = (\n  node: ReactTestInstance,\n  options?: ByRoleOptions\n) => {\n  return options != null ? matchAccessibilityState(node, options) : true;\n};\n\nconst queryAllByRole = (\n  instance: ReactTestInstance\n): ((role: TextMatch, options?: ByRoleOptions) => Array<ReactTestInstance>) =>\n  function queryAllByRoleFn(role, options) {\n    return instance.findAll(\n      (node) =>\n        // run the cheapest checks first, and early exit too avoid unneeded computations\n\n        typeof node.type === 'string' &&\n        matchStringProp(node.props.accessibilityRole, role) &&\n        matchAccessibleStateIfNeeded(node, options) &&\n        matchAccessibleNameIfNeeded(node, options?.name)\n    );\n  };\n\nconst buildErrorMessage = (role: TextMatch, options: ByRoleOptions = {}) => {\n  const errors = [`role: \"${String(role)}\"`];\n\n  if (options.name) {\n    errors.push(`name: \"${String(options.name)}\"`);\n  }\n\n  accessibilityStateKeys.forEach((stateKey) => {\n    if (options[stateKey] !== undefined) {\n      errors.push(`${stateKey} state: ${options[stateKey]}`);\n    }\n  });\n\n  return errors.join(', ');\n};\n\nconst getMultipleError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Found multiple elements with ${buildErrorMessage(role, options)}`;\n\nconst getMissingError = (role: TextMatch, options?: ByRoleOptions) =>\n  `Unable to find an element with ${buildErrorMessage(role, options)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByRole,\n  getMissingError,\n  getMultipleError\n);\n\nexport type ByRoleQueries = {\n  getByRole: GetByQuery<TextMatch, ByRoleOptions>;\n  getAllByRole: GetAllByQuery<TextMatch, ByRoleOptions>;\n  queryByRole: QueryByQuery<TextMatch, ByRoleOptions>;\n  queryAllByRole: QueryAllByQuery<TextMatch, ByRoleOptions>;\n  findByRole: FindByQuery<TextMatch, ByRoleOptions>;\n  findAllByRole: FindAllByQuery<TextMatch, ByRoleOptions>;\n};\n\nexport const bindByRoleQueries = (\n  instance: ReactTestInstance\n): ByRoleQueries => ({\n  getByRole: getBy(instance),\n  getAllByRole: getAllBy(instance),\n  queryByRole: queryBy(instance),\n  queryAllByRole: queryAllBy(instance),\n  findByRole: findBy(instance),\n  findAllByRole: findAllBy(instance),\n});\n"],"mappings":";;;;;;AAEA;AACA;AACA;AAEA;AACA;AAcA,MAAMA,2BAA2B,GAAG,CAClCC,IAAuB,EACvBC,IAAgB,KACb;EACH,IAAIA,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI;EAE7B,MAAM;IAAEC,cAAc;IAAEC;EAAoB,CAAC,GAAG,IAAAC,4BAAoB,EAACJ,IAAI,CAAC;EAC1E,OACEE,cAAc,CAACD,IAAI,CAAC,CAACI,MAAM,GAAG,CAAC,IAAIF,mBAAmB,CAACF,IAAI,CAAC,CAACI,MAAM,GAAG,CAAC;AAE3E,CAAC;AAED,MAAMC,4BAA4B,GAAG,CACnCN,IAAuB,EACvBO,OAAuB,KACpB;EACH,OAAOA,OAAO,IAAI,IAAI,GAAG,IAAAC,2CAAuB,EAACR,IAAI,EAAEO,OAAO,CAAC,GAAG,IAAI;AACxE,CAAC;AAED,MAAME,cAAc,GAClBC,QAA2B,IAE3B,SAASC,gBAAgB,CAACC,IAAI,EAAEL,OAAO,EAAE;EACvC,OAAOG,QAAQ,CAACG,OAAO,CACpBb,IAAI;EACH;;EAEA,OAAOA,IAAI,CAACc,IAAI,KAAK,QAAQ,IAC7B,IAAAC,gCAAe,EAACf,IAAI,CAACgB,KAAK,CAACC,iBAAiB,EAAEL,IAAI,CAAC,IACnDN,4BAA4B,CAACN,IAAI,EAAEO,OAAO,CAAC,IAC3CR,2BAA2B,CAACC,IAAI,EAAEO,OAAO,EAAEN,IAAI,CAAC,CACnD;AACH,CAAC;AAEH,MAAMiB,iBAAiB,GAAG,CAACN,IAAe,EAAEL,OAAsB,GAAG,CAAC,CAAC,KAAK;EAC1E,MAAMY,MAAM,GAAG,CAAE,UAASC,MAAM,CAACR,IAAI,CAAE,GAAE,CAAC;EAE1C,IAAIL,OAAO,CAACN,IAAI,EAAE;IAChBkB,MAAM,CAACE,IAAI,CAAE,UAASD,MAAM,CAACb,OAAO,CAACN,IAAI,CAAE,GAAE,CAAC;EAChD;EAEAqB,oCAAsB,CAACC,OAAO,CAAEC,QAAQ,IAAK;IAC3C,IAAIjB,OAAO,CAACiB,QAAQ,CAAC,KAAKC,SAAS,EAAE;MACnCN,MAAM,CAACE,IAAI,CAAE,GAAEG,QAAS,WAAUjB,OAAO,CAACiB,QAAQ,CAAE,EAAC,CAAC;IACxD;EACF,CAAC,CAAC;EAEF,OAAOL,MAAM,CAACO,IAAI,CAAC,IAAI,CAAC;AAC1B,CAAC;AAED,MAAMC,gBAAgB,GAAG,CAACf,IAAe,EAAEL,OAAuB,KAC/D,gCAA+BW,iBAAiB,CAACN,IAAI,EAAEL,OAAO,CAAE,EAAC;AAEpE,MAAMqB,eAAe,GAAG,CAAChB,IAAe,EAAEL,OAAuB,KAC9D,kCAAiCW,iBAAiB,CAACN,IAAI,EAAEL,OAAO,CAAE,EAAC;AAEtE,MAAM;EAAEsB,KAAK;EAAEC,QAAQ;EAAEC,OAAO;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAAU,CAAC,GAAG,IAAAC,wBAAW,EAC7E1B,cAAc,EACdmB,eAAe,EACfD,gBAAgB,CACjB;AAWM,MAAMS,iBAAiB,GAC5B1B,QAA2B,KACR;EACnB2B,SAAS,EAAER,KAAK,CAACnB,QAAQ,CAAC;EAC1B4B,YAAY,EAAER,QAAQ,CAACpB,QAAQ,CAAC;EAChC6B,WAAW,EAAER,OAAO,CAACrB,QAAQ,CAAC;EAC9BD,cAAc,EAAEuB,UAAU,CAACtB,QAAQ,CAAC;EACpC8B,UAAU,EAAEP,MAAM,CAACvB,QAAQ,CAAC;EAC5B+B,aAAa,EAAEP,SAAS,CAACxB,QAAQ;AACnC,CAAC,CAAC;AAAC"}